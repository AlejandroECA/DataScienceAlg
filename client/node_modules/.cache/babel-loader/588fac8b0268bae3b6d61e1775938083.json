{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/signInAndOut/signIn/signIn.component.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/formInput.component';\nimport CustomButton from '../custom-button/customButton.component';\nimport './sigIn.styles.scss';\nimport { googleSignInStart, emailSignInStart } from '../../../redux/user/users.actions';\n\nconst SignIn = () => {\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = this.state;\n    const {\n      emailSignInStart\n    } = this.props;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"title\",\n      children: \"I have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"sub-title\",\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: this.handleChange,\n        value: this.state.email,\n        required: true,\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        handleChange: this.handleChange,\n        value: this.state.password,\n        required: true,\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: googleSignInStart,\n          type: \"button\",\n          isGoogleSignIn: true,\n          children: \"Sign In with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/signInAndOut/signIn/signIn.component.js"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","handleSubmit","e","preventDefault","email","password","state","props","handleChange","value","name","target","setState","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AAEA,OAAO,qBAAP;AAEA,SAASC,iBAAT,EAA6BC,gBAA7B,QAAoD,mCAApD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AAGjB,QAAMC,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAoB,KAAKC,KAA/B;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAwB,KAAKQ,KAAnC;AAEAR,IAAAA,gBAAgB,CAACK,KAAD,EAAOC,QAAP,CAAhB;AAEH,GARD;;AAUA,QAAMG,YAAY,GAAGN,CAAC,IAAI;AACtB,UAAM;AAAEO,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBR,CAAC,CAACS,MAA1B;AAEA,SAAKC,QAAL,CAAc;AACV,OAACF,IAAD,GAAQD;AADE,KAAd;AAGH,GAND;;AASA,QAAM;AAACX,IAAAA;AAAD,MAAuB,KAAKS,KAAlC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BAEI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAM,MAAA,QAAQ,EAAE,KAAKN,YAArB;AAAA,8BAEI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,YAAY,EAAE,KAAKO,YAHnB;AAGiC,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWF,KAHnD;AAG0D,QAAA,QAAQ,MAHlE;AAIA,QAAA,KAAK,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,YAAY,EAAE,KAAKI,YAHnB;AAGiC,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWD,QAHnD;AAG6D,QAAA,QAAQ,MAHrE;AAIA,QAAA,KAAK,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,cAVJ,eAiBI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACA,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAGA,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEP,iBAAvB;AACA,UAAA,IAAI,EAAC,QADL;AACc,UAAA,cAAc,MAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CA3DD;;KAAME,M;;AA+DN,MAAMa,kBAAkB,GAAKC,QAAD,KAAe;AACvChB,EAAAA,iBAAiB,EAAE,MAAMgB,QAAQ,CAAChB,iBAAiB,EAAlB,CADM;AAEvCC,EAAAA,gBAAgB,EAAE,CAACK,KAAD,EAAQC,QAAR,KAAqBS,QAAQ,CAACf,gBAAgB,CAAC;AAACK,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAAjB;AAFR,CAAf,CAA5B;;AAKA,eAAeV,OAAO,CAAC,IAAD,EAAMkB,kBAAN,CAAP,CAAiCb,MAAjC,CAAf","sourcesContent":["import React, {useState}from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/formInput.component'\nimport CustomButton from '../custom-button/customButton.component'\n\nimport './sigIn.styles.scss'\n\nimport { googleSignInStart , emailSignInStart} from '../../../redux/user/users.actions'\n\n\n\nconst SignIn = () => {\n\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        const {email, password} = this.state\n        const { emailSignInStart } =  this.props\n\n        emailSignInStart(email,password)\n  \n    }\n\n    const handleChange = e => {\n        const { value, name } = e.target\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n\n    const {googleSignInStart} =  this.props\n\n    return(\n        <div className='sign-in'>\n\n            <h4 className='title'>I have an account</h4>\n            <h5 className='sub-title'>Sign in with your email and password</h5>\n\n            <form onSubmit={this.handleSubmit}>\n\n                <FormInput \n                name='email' \n                type='email' \n                handleChange={this.handleChange} value={this.state.email} required  \n                label='Email'\n                />\n\n\n                <FormInput \n                name='password' \n                type='password' \n                handleChange={this.handleChange} value={this.state.password} required \n                label='Password'\n                />\n\n                <div className='buttons'>\n                <CustomButton type='submit'>Sign In</CustomButton>\n\n                <CustomButton onClick={googleSignInStart} \n                type=\"button\" isGoogleSignIn >Sign In with Google</CustomButton>\n                </div>\n            </form>\n\n        </div>\n\n            \n    )\n}\n\n\n\nconst mapDispatchToProps =  (dispatch) => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}