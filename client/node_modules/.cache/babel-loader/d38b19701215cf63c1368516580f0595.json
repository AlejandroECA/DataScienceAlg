{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/card-list/ListOfCards.component.js\";\nimport React from 'react';\nimport './ListOfCards.style.css';\nimport { CardIndividual } from '../card/CardIndividual.component';\nimport { Container, Col, Row } from 'reactstrap';\nimport { SearchBox } from '../searchBox/searchBox.component';\nimport DefaulTitle from '../title/title.component';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectAlgIndividual } from '../../redux/algorithmsL/algorithm.collection';\n\nclass ListOfCards extends React.Component {\n  constructor() {\n    super();\n\n    this.checkAndFind = e => {\n      this.setState({\n        searchField: e.target.value\n      });\n    };\n\n    this.state = {\n      searchField: ''\n    };\n  } // async way \n  // componentDidMount = async() => {\n  //     try {\n  //         const getDataB = await fetch('http://localhost:3000/algorithms')\n  //         const dataToJ = await getDataB.json()\n  //         this.setState({algorithmList: dataToJ},console.log(dataToJ))\n  //     }\n  //     catch(err){\n  //         console.log('not possible now');\n  //     }\n  // }\n  // promises\n  // componentDidMount() => {\n  //     const getDataB = await fetch('')\n  //     .then(response => response.json())\n  //     .then(alg => this.setState({algorithmList:alg}))\n  // .catch((e)=>(console.log('not possible now'))\n  // }\n\n\n  render() {\n    const {\n      algorithmList,\n      searchField\n    } = this.state;\n    const fiterAlg = algorithmList.filter(alg => alg.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(DefaulTitle, {\n            title: 'Algorithms List'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"12\",\n            children: /*#__PURE__*/_jsxDEV(SearchBox, {\n              handleChange: this.checkAndFind,\n              placeholder: 'Search Algorithms'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: fiterAlg.map(x => /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"6\",\n            sm: \"6\",\n            md: \"4\",\n            lg: \"3\",\n            className: \"card-list\",\n            children: /*#__PURE__*/_jsxDEV(CardIndividual, {\n              index: x.id,\n              x: x\n            }, x.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\npr;\nconst mapStateToProps = createStructuredSelector({\n  item: selectAlgIndividual\n});\nexport default connect(mapStateToProps)(ListOfCards);","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/card-list/ListOfCards.component.js"],"names":["React","CardIndividual","Container","Col","Row","SearchBox","DefaulTitle","connect","createStructuredSelector","selectAlgIndividual","ListOfCards","Component","constructor","checkAndFind","e","setState","searchField","target","value","state","render","algorithmList","fiterAlg","filter","alg","name","toLowerCase","includes","toLocaleLowerCase","map","x","id","pr","mapStateToProps","item"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,SAAQC,cAAR,QAA6B,kCAA7B;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,GAAtB,QAAgC,YAAhC;AACA,SAAQC,SAAR,QAAwB,kCAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,wBAAT,QAAwC,UAAxC;AACA,SAASC,mBAAT,QAAoC,8CAApC;;AAGA,MAAMC,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,GAAE;AACT;;AADS,SA8BbC,YA9Ba,GA8BEC,CAAD,IAAO;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAvB,OAAd;AAEH,KAjCY;;AAET,SAAKC,KAAL,GAAY;AACRH,MAAAA,WAAW,EAAC;AADJ,KAAZ;AAGH,GANqC,CAQtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AASAI,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAACC,MAAAA,aAAD;AAAgBL,MAAAA;AAAhB,QAAgC,KAAKG,KAA3C;AAEA,UAAMG,QAAQ,GAAGD,aAAa,CAACE,MAAd,CAAqBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCX,WAAW,CAACY,iBAAZ,EAAhC,CAA5B,CAAjB;AAEA,wBACI;AAAA,8BACI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,WAAD;AAAa,YAAA,KAAK,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,IAAR;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,YAAY,EAAE,KAAKf,YAA9B;AAA4C,cAAA,WAAW,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAA,oBACKS,QAAQ,CAACO,GAAT,CAAeC,CAAD,iBACf,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAY,YAAA,EAAE,EAAC,GAAf;AAAmB,YAAA,EAAE,EAAC,GAAtB;AAA0B,YAAA,EAAE,EAAC,GAA7B;AAAgC,YAAA,SAAS,EAAC,WAA1C;AAAA,mCACI,QAAC,cAAD;AACW,cAAA,KAAK,EAAEA,CAAC,CAACC,EADpB;AACwB,cAAA,CAAC,EAAED;AAD3B,eACKA,CAAC,CAACC,EADP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;;AAnEqC;;AAqEzCC,EAAE;AAEH,MAAMC,eAAe,GAAGzB,wBAAwB,CAAC;AAC7C0B,EAAAA,IAAI,EAACzB;AADwC,CAAD,CAAhD;AAIA,eAAeF,OAAO,CAAC0B,eAAD,CAAP,CAAyBvB,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport './ListOfCards.style.css';\nimport {CardIndividual} from '../card/CardIndividual.component';\nimport {Container,Col,Row} from 'reactstrap'\nimport {SearchBox} from '../searchBox/searchBox.component'\nimport DefaulTitle from '../title/title.component';\n\nimport {connect} from 'react-redux'\nimport { createStructuredSelector} from 'reselect'\nimport { selectAlgIndividual } from '../../redux/algorithmsL/algorithm.collection'\n\n\nclass ListOfCards extends React.Component {\n    constructor(){\n        super();\n        this.state ={\n            searchField:''\n        }\n    }\n\n    // async way \n\n    // componentDidMount = async() => {\n    //     try {\n    //         const getDataB = await fetch('http://localhost:3000/algorithms')\n    //         const dataToJ = await getDataB.json()\n    //         this.setState({algorithmList: dataToJ},console.log(dataToJ))\n    //     }\n    //     catch(err){\n    //         console.log('not possible now');\n    //     }\n    // }\n\n    // promises\n\n    // componentDidMount() => {\n    //     const getDataB = await fetch('')\n    //     .then(response => response.json())\n    //     .then(alg => this.setState({algorithmList:alg}))\n    // .catch((e)=>(console.log('not possible now'))\n    // }\n\n\n    checkAndFind= (e) => {\n        this.setState({searchField: e.target.value}\n        )\n    }\n\n\n    render(){\n\n        const {algorithmList, searchField } = this.state; \n\n        const fiterAlg = algorithmList.filter(alg => alg.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n\n        return(\n            <div>\n                <Container>\n                    <Row >\n                        <DefaulTitle title={'Algorithms List'} />\n                        <Col xs='12'>\n                            <SearchBox handleChange={this.checkAndFind} placeholder={'Search Algorithms'}/>\n                        \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container>\n                    <Row >\n                        {fiterAlg.map( (x) => \n                        <Col xs='6' sm='6' md='4' lg='3'className='card-list'>\n                            <CardIndividual\n                            key={x.id} index={x.id} x={x} />\n                        </Col>\n                        )}      \n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n}pr\n\nconst mapStateToProps = createStructuredSelector({\n    item:selectAlgIndividual\n})\n\nexport default connect(mapStateToProps)(ListOfCards)\n\n"]},"metadata":{},"sourceType":"module"}