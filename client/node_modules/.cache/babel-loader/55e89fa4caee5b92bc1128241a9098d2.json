{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SignInFailure, SignInSuccess, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './users.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(SignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(SignUpSuccess({\n      user,\n      additionalData: {\n        displayname\n      }\n    }));\n  } catch (error) {\n    yield put(SignUpFailure(error));\n  }\n}\nexport function* signInAftherSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAftherSignUp);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","SignInFailure","SignInSuccess","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","signUp","displayName","createUserWithEmailAndPassword","SignUpSuccess","displayname","SignUpFailure","signInAftherSignUp","onSignUpSuccess","SIGN_UP_SUCCESS","onSignUpStart","SIGN_UP_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\nimport UserActionTypes  from './user.types'\nimport { auth, googleProvider, createUserProfileDocument , getCurrentUser} from  '../../firebase/firebase.utils'\nimport { SignInFailure, SignInSuccess, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure} from './users.actions'\n\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData){\n\n    try{\n    const userRef = yield call(createUserProfileDocument,userAuth, additionalData)\n    const userSnapshot = yield userRef.get()\n    yield put(SignInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data\n    }))\n    \n    }catch(error){\n    yield put(SignInFailure(error))\n    }\n}\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} =  yield auth.signInWithPopup(googleProvider)\n        yield getSnapshotFromUserAuth(user)\n        \n    }catch(error){\n        yield put(SignInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle)\n}\n\n\n\nexport function* signInWithEmail({payload:{email, password}}){\n    try{\n        const { user } =  yield auth.signInWithEmailAndPassword(email,password);\n        yield getSnapshotFromUserAuth(user)\n\n    }catch(error){\n        put(SignInFailure(error))\n    }\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\n}\n\nexport function* signUp({payload:{email,password, displayName}}){\n    try{\n\n        const { user } = yield auth.createUserWithEmailAndPassword(\n            email,\n            password\n        );\n        yield put(SignUpSuccess({user ,additionalData: { displayname}}))\n\n    }catch(error){\n        yield put(SignUpFailure(error))\n\n    }\n}\n\nexport function* signInAftherSignUp({payload: {user, additionalData}}){\n    yield getSnapshotFromUserAuth( user, additionalData)\n}\n\nexport function* onSignUpSuccess(){\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,signInAftherSignUp)\n}\n\n\n\nexport function* onSignUpStart(){\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp)\n}\n\nexport function* isUserAuthenticated(){\n    try{\n        const userAuth =  yield getCurrentUser()\n        if (userAuth) return\n        yield getSnapshotFromUserAuth(userAuth)\n    }catch(error){\n        yield put(SignInFailure(error))\n    }\n}\n\nexport function* onCheckUserSession(){\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,isUserAuthenticated)\n}\n\nexport function* signOut(){\n    try{\n        yield auth.signOut();\n        yield put(signOutSuccess())\n    }catch(error){\n        yield put(signOutFailure(error))\n    }\n}\n\nexport function* onSignOutStart(){\n   yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut) \n}\n\nexport function* userSagas(){\n    yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart)\n    \n    ])\n}"]},"metadata":{},"sourceType":"module"}