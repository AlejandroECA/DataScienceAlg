{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignInFailure, SignInSuccess } from './users.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data\n    }));\n  } catch (error) {\n    put(SignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","SignInFailure","SignInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA6B,cAA7B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA4C,iBAA5C;AAKA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAU,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAtB;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA2BI,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACQ,aAAa,CAAC;AACpBO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADG;AAEpB,SAAGF,YAAY,CAACG;AAFI,KAAD,CAAd,CAAT;AAKH,GATD,CASC,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACO,aAAa,CAACU,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMnB,UAAU,CAACI,eAAe,CAACgB,oBAAjB,EAAsCV,gBAAtC,CAAhB;AACH;AAID,OAAO,UAAUW,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAT,CAA1B,EAAsD;AACzD,MAAG;AACC,UAAM;AAAEb,MAAAA;AAAF,QAAY,MAAMN,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAAxB;AACA,UAAMX,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA2BI,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACQ,aAAa,CAAC;AACpBO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADG;AAEpB,SAAGF,YAAY,CAACG;AAFI,KAAD,CAAd,CAAT;AAKH,GATD,CASC,OAAMC,KAAN,EAAY;AACTjB,IAAAA,GAAG,CAACO,aAAa,CAACU,KAAD,CAAd,CAAH;AACH;AACJ;AAED,OAAO,UAAUQ,kBAAV,GAA+B;AAClC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAAqCN,eAArC,CAAhB;AACH;AAED,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACgB,mBAAD,CAAL,EACVhB,IAAI,CAACuB,kBAAD,CADM,CAAD,CAAT;AAEH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\nimport UserActionTypes  from './user.types'\nimport { auth, googleProvider, createUserProfileDocument} from  '../../firebase/firebase.utils'\nimport { SignInFailure, SignInSuccess} from './users.actions'\n\n\n\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} =  yield auth.signInWithPopup(googleProvider)\n        const userRef = yield call(createUserProfileDocument,user)\n        const userSnapshot = yield userRef.get()\n        yield put(SignInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data\n        }))\n        \n    }catch(error){\n        yield put(SignInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle)\n}\n\n\n\nexport function* signInWithEmail({payload:{email, password}}){\n    try{\n        const { user } =  yield auth.signInWithEmailAndPassword(email,password);\n        const userRef = yield call(createUserProfileDocument,user)\n        const userSnapshot = yield userRef.get()\n        yield put(SignInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data\n        }))\n\n    }catch(error){\n        put(SignInFailure(error))\n    }\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\n}\n\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart),\n    call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}