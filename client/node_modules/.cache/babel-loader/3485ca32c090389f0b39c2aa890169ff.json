{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/Shop/shopList/shopList.component.js\";\nimport React from 'react';\nimport DefaulTitle from '../../title/title.component';\nimport { Route, withRouter } from 'react-router-dom';\nimport CollectionsOverview from '../collections-overview/collections-overview.componenct';\nimport CollectionPage from '../shop.components/collection/collection.component';\nimport { firestore, convertCollectionsSnapshotsToMap } from '../../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections, fetchCollectionsStartAsync } from '../../../redux/shop/shop.actions';\nimport WithSpinner from '../../with-spinner/with-spinner.component';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCollectioForpreview, selectIsCollectionFetching } from '../../../redux/shop/shop.selector';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst ColletionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = ColletionPageWithSpinner;\n\nclass ShopList extends React.Component {\n  // constructor(props){ \n  //     super(props);\n  //     this.state = {\n  //         loading: true\n  //     }\n  // }\n  // unsubscribeFromSnapshot = null;\n  // componentDidMount(){\n  // const {updateCollections} = this.props\n  // const collectionRef = firestore.collection('collections');\n  // //.GET server way promise\n  // collectionRef.get()\n  // .then(\n  //     snapshot => {\n  //         const collectionsMap = convertCollectionsSnapshotsToMap(snapshot);\n  //         updateCollections(collectionsMap);\n  //         this.setState({loading: false});\n  //     }\n  // )\n  //using URL and fetch - Super Nested :/\n  // fetch('https://firestore.googleapis.com/v1/projects/datasc-6fb40/databases/(default)/documents/collections')\n  // .then(response => response.json())\n  // .then(collections => console.log(collections))\n  //Listener from firebase\n  // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotsToMap(snapshot);\n  //     updateCollections(collectionsMap);\n  //     this.setState({loading: false});\n  // } )\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetch;\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DefaulTitle, {\n        title: 'SHOP List'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `${match.path}`,\n          render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n            isLoading: isCollectionFetching,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 75\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `${match.path}/:collectionId`,\n          render: props => /*#__PURE__*/_jsxDEV(ColletionPageWithSpinner, {\n            isLoading: isCollectionFetching,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 84\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ShopList));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"ColletionPageWithSpinner\");","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/Shop/shopList/shopList.component.js"],"names":["React","DefaulTitle","Route","withRouter","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotsToMap","connect","updateCollections","fetchCollectionsStartAsync","WithSpinner","createStructuredSelector","selectCollectioForpreview","selectIsCollectionFetching","CollectionsOverviewWithSpinner","ColletionPageWithSpinner","ShopList","Component","componentDidMount","props","fetch","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,SAASC,KAAT,EAAiBC,UAAjB,QAAkC,kBAAlC;AAEA,OAAOC,mBAAP,MAAgC,yDAAhC;AAEA,OAAOC,cAAP,MAA2B,oDAA3B;AAEA,SAAQC,SAAR,EAAmBC,gCAAnB,QAA0D,kCAA1D;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,EAA2BC,0BAA3B,QAA4D,kCAA5D;AAEA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,yBAAT,EAAoCC,0BAApC,QAAqE,mCAArE;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACP,mBAAD,CAAlD;KAAMW,8B;AACN,MAAMC,wBAAwB,GAAGL,WAAW,CAACN,cAAD,CAA5C;MAAMW,wB;;AAGN,MAAMC,QAAN,SAAuBjB,KAAK,CAACkB,SAA7B,CAAsC;AAElC;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEI;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEJC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAET,MAAAA;AAAF,QAAgC,KAAKU,KAA3C;AACAC,IAAAA,KAAK;AACR;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,KAAD;AAASC,MAAAA;AAAT,QAAiC,KAAKJ,KAA5C;AACA,wBACI;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAG,GAAEG,KAAK,CAACE,IAAK,EAAjC;AAAoC,UAAA,MAAM,EAAGL,KAAD,iBAAU,QAAC,8BAAD;AAAgC,YAAA,SAAS,EAAEI,oBAA3C;AAAA,eAAqEJ;AAArE;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAG,GAAEG,KAAK,CAACE,IAAK,gBAA3B;AAA4C,UAAA,MAAM,EAAGL,KAAD,iBAAW,QAAC,wBAAD;AAA0B,YAAA,SAAS,EAAEI,oBAArC;AAAA,eAA+DJ;AAA/D;AAAA;AAAA;AAAA;AAAA;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA3DiC;;AA8DtC,MAAMM,eAAe,GAAGd,wBAAwB,CAAC;AAC7CY,EAAAA,oBAAoB,EAAEV;AADuB,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAI;AACnClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAAD;AADP,CAAJ,CAAnC;;AAKA,eAAeF,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CxB,UAAU,CAACc,QAAD,CAAvD,CAAf","sourcesContent":["import React from 'react';\n\nimport DefaulTitle from '../../title/title.component'\n\nimport { Route , withRouter} from 'react-router-dom';\n\nimport CollectionsOverview from '../collections-overview/collections-overview.componenct'\n\nimport CollectionPage from '../shop.components/collection/collection.component'\n\nimport {firestore, convertCollectionsSnapshotsToMap} from '../../../firebase/firebase.utils'\n\nimport {connect} from 'react-redux'\nimport {updateCollections, fetchCollectionsStartAsync} from '../../../redux/shop/shop.actions'\n\nimport WithSpinner from '../../with-spinner/with-spinner.component'\n\nimport { createStructuredSelector } from 'reselect'\nimport { selectCollectioForpreview, selectIsCollectionFetching} from '../../../redux/shop/shop.selector'\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst ColletionPageWithSpinner = WithSpinner(CollectionPage)\n\n\nclass ShopList extends React.Component{\n\n    // constructor(props){ \n    //     super(props);\n    //     this.state = {\n    //         loading: true\n    //     }\n    // }\n\n    // unsubscribeFromSnapshot = null;\n\n    // componentDidMount(){\n\n        // const {updateCollections} = this.props\n\n        // const collectionRef = firestore.collection('collections');\n\n        // //.GET server way promise\n        // collectionRef.get()\n        // .then(\n\n        //     snapshot => {\n        //         const collectionsMap = convertCollectionsSnapshotsToMap(snapshot);\n        //         updateCollections(collectionsMap);\n        //         this.setState({loading: false});\n        //     }\n\n        // )\n\n\n        //using URL and fetch - Super Nested :/\n        // fetch('https://firestore.googleapis.com/v1/projects/datasc-6fb40/databases/(default)/documents/collections')\n        // .then(response => response.json())\n        // .then(collections => console.log(collections))\n\n        \n        //Listener from firebase\n        // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n        //     const collectionsMap = convertCollectionsSnapshotsToMap(snapshot);\n        //     updateCollections(collectionsMap);\n        //     this.setState({loading: false});\n        // } )\n\n    componentDidMount(){\n        const { fetchCollectionsStartAsync} = this.props;\n        fetch\n    }\n\n    render(){\n        const {match , isCollectionFetching} = this.props\n        return(\n            <div>\n                <DefaulTitle title={'SHOP List'} />\n                <div>\n                    <Route exact path={`${match.path}`} render={(props)=> <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props}/> } />\n                    <Route path={`${match.path}/:collectionId`} render={(props) => <ColletionPageWithSpinner isLoading={isCollectionFetching} {...props} /> } />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching\n})\n\nconst mapDispatchToProps = dispatch =>({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync)\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ShopList))"]},"metadata":{},"sourceType":"module"}