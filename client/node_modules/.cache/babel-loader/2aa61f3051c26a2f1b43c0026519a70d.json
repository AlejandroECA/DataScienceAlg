{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/search.js\";\nimport React from 'react';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      const getDataB = await fetch('');\n      const dataToJ = await (response => response.json()).then(alg => this.setState({\n        algorithmList: alg\n      }));\n    };\n\n    this.componentDidMount = async () => {\n      const getDataB = await fetch('').then(response => response.json()).then(alg => this.setState({\n        algorithmList: alg\n      }));\n    };\n\n    this.state = {\n      algorithmList: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Algorithm List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), this.state.algorithmList.map((x, index) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: x.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 61\n      }, this))]\n    }, void 0, true);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/search.js"],"names":["React","Search","Component","constructor","componentDidMount","getDataB","fetch","dataToJ","response","json","then","alg","setState","algorithmList","state","render","map","x","index","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAQbC,iBARa,GAQO,YAAW;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,EAAD,CAA5B;AACA,YAAMC,OAAO,GAAG,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAb,EACrBC,IADqB,CAChBC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,aAAa,EAACF;AAAf,OAAd,CADS,CAAtB;AAEH,KAZY;;AAAA,SAcbP,iBAda,GAcO,YAAW;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,EAAD,CAAL,CACtBI,IADsB,CACjBF,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADK,EAEtBC,IAFsB,CAEjBC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,aAAa,EAACF;AAAf,OAAd,CAFU,CAAvB;AAGH,KAlBY;;AAET,SAAKG,KAAL,GAAY;AACRD,MAAAA,aAAa,EAAC;AADN,KAAZ;AAIH;;AAcDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKD,KAAL,CAAWD,aAAX,CAAyBG,GAAzB,CAA8B,CAACC,CAAD,EAAGC,KAAH,kBAAa;AAAA,kBAAiBD,CAAC,CAACE;AAAnB,SAASD,KAAT;AAAA;AAAA;AAAA;AAAA,cAA3C,CAFL;AAAA,oBADJ;AAMH;;AA5BgC;;AAgCrC,eAAejB,MAAf","sourcesContent":["import React from 'react';\n\n\n\nclass Search extends React.Component {\n    constructor(){\n        super();\n        this.state ={\n            algorithmList:[]\n            \n        }\n    }\n\n    componentDidMount = async() => {\n        const getDataB = await fetch('')\n        const dataToJ = await (response => response.json())\n        .then(alg => this.setState({algorithmList:alg}))\n    }\n\n    componentDidMount = async() => {\n        const getDataB = await fetch('')\n        .then(response => response.json())\n        .then(alg => this.setState({algorithmList:alg}))\n    }\n\n    render(){\n        return(\n            <>\n                <h1>Algorithm List</h1>\n                {this.state.algorithmList.map( (x,index) => <h3 key={index}>{x.name}</h3>)}\n            </>\n        )\n    }\n\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}