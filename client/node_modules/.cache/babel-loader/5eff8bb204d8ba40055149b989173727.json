{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/card-list/ListOfCards.component.js\";\nimport React from 'react';\nimport './ListOfCards.style.css';\nimport { CardIndividual } from '../card/CardIndividual.component';\nimport { Input, Container, Col, Row } from 'reactstrap';\n\nclass ListOfCards extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      try {\n        const getDataB = await fetch('http://localhost:3000/algorithms');\n        const dataToJ = await getDataB.json();\n        this.setState({\n          algorithmList: dataToJ\n        });\n      } catch (err) {\n        console.log('not possible now');\n      }\n    };\n\n    this.checkAndFind = e => {\n      this.setState({\n        searchField: e.target.value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      algorithmList: [],\n      searchField: ''\n    };\n  } // async way \n\n\n  render() {\n    const {\n      algorithmList,\n      searchField\n    } = this.state;\n    const fiterAlg = algorithmList.filter(alg => alg.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"themed-container\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"ml-auto mr-auto\",\n              children: \"Algorithm List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"search\",\n              placeholder: \"search algorithm\",\n              onChange: e => this.checkAndFind(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-list\",\n              children: fiterAlg.map(x => /*#__PURE__*/_jsxDEV(CardIndividual, {\n                index: index,\n                x: x\n              }, fin, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ListOfCards;","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/card-list/ListOfCards.component.js"],"names":["React","CardIndividual","Input","Container","Col","Row","ListOfCards","Component","constructor","componentDidMount","getDataB","fetch","dataToJ","json","setState","algorithmList","err","console","log","checkAndFind","e","searchField","target","value","state","render","fiterAlg","filter","alg","name","toLowerCase","includes","toLocaleLowerCase","map","x","index","fin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,SAAQC,cAAR,QAA6B,kCAA7B;AACA,SAAQC,KAAR,EAAcC,SAAd,EAAwBC,GAAxB,EAA4BC,GAA5B,QAAsC,YAAtC;;AAGA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAUbC,iBAVa,GAUO,YAAW;AAC3B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA5B;AACA,cAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACA,aAAKC,QAAL,CAAc;AAACC,UAAAA,aAAa,EAAEH;AAAhB,SAAd;AACH,OAJD,CAKA,OAAMI,GAAN,EAAU;AACNC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ,KAnBY;;AAAA,SA+BbC,YA/Ba,GA+BEC,CAAD,IAAO;AACjB,WAAKN,QAAL,CAAc;AAACO,QAAAA,WAAW,EAACD,CAAC,CAACE,MAAF,CAASC;AAAtB,OAAd,EAA2C,MAAKN,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAjB,CAAhD;AAEH,KAlCY;;AAET,SAAKA,KAAL,GAAY;AACRT,MAAAA,aAAa,EAAC,EADN;AAERM,MAAAA,WAAW,EAAC;AAFJ,KAAZ;AAIH,GAPqC,CAStC;;;AA6BAI,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAACV,MAAAA,aAAD;AAAgBM,MAAAA;AAAhB,QAAgC,KAAKG,KAA3C;AAEA,UAAME,QAAQ,GAAGX,aAAa,CAACY,MAAd,CAAqBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCV,WAAW,CAACW,iBAAZ,EAAhC,CAA5B,CAAjB;AAEA,wBACI;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,kBAArB;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAA,mCACI;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,WAAW,EAAC,kBAAjC;AAAoD,cAAA,QAAQ,EAAGZ,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,wBACKM,QAAQ,CAACO,GAAT,CAAeC,CAAD,iBACX,QAAC,cAAD;AACU,gBAAA,KAAK,EAAEC,KADjB;AACwB,gBAAA,CAAC,EAAED;AAD3B,iBACKE,GADL;AAAA;AAAA;AAAA;AAAA,sBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA,oBADJ;AA2BH;;AAvEqC;;AA2E1C,eAAe9B,WAAf","sourcesContent":["import React from 'react';\nimport './ListOfCards.style.css';\nimport {CardIndividual} from '../card/CardIndividual.component';\nimport {Input,Container,Col,Row} from 'reactstrap'\n\n\nclass ListOfCards extends React.Component {\n    constructor(){\n        super();\n        this.state ={\n            algorithmList:[],\n            searchField:''\n        }\n    }\n\n    // async way \n\n    componentDidMount = async() => {\n        try {\n            const getDataB = await fetch('http://localhost:3000/algorithms')\n            const dataToJ = await getDataB.json()\n            this.setState({algorithmList: dataToJ})\n        }\n        catch(err){\n            console.log('not possible now');\n        }\n    }\n\n    // promises\n\n    // componentDidMount() => {\n    //     const getDataB = await fetch('')\n    //     .then(response => response.json())\n    //     .then(alg => this.setState({algorithmList:alg}))\n    // .catch((e)=>(console.log('not possible now'))\n    // }\n\n\n    checkAndFind= (e) => {\n        this.setState({searchField:e.target.value},()=> console.log(this.state)\n        )\n    }\n\n\n    render(){\n\n        const {algorithmList, searchField } = this.state; \n\n        const fiterAlg = algorithmList.filter(alg => alg.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n\n        return(\n            <>\n                <Container className=\"themed-container\">\n                    <Col >\n                        <Row>\n                            <h1 className='ml-auto mr-auto'>Algorithm List</h1>\n                        </Row>\n                        <Row className=\"row\">\n                            <Input type='search' placeholder='search algorithm' onChange={ e => this.checkAndFind(e)} />\n                        \n                        </Row>\n                    </Col>\n                </Container>\n                <Container>\n                    <Col className=\"col\">\n                        <Row className=\"row\">\n                            <div className='card-list'>\n                                {fiterAlg.map( (x) => \n                                    <CardIndividual\n                                    key={fin} index={index} x={x} />)\n                                }\n                            </div>\n                        </Row>\n                    </Col>\n                </Container>\n            </>\n        )\n    }\n\n}\n\nexport default ListOfCards\n\n"]},"metadata":{},"sourceType":"module"}