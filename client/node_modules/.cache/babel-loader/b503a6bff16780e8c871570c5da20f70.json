{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/card-list/ListOfCards.component.js\";\nimport React from 'react';\nimport './ListOfCards.style.css';\nimport { CardIndividual } from '../card/CardIndividual.component';\nimport { Container, Col, Row } from 'reactstrap';\nimport { SearchBox } from '../searchBox/searchBox.component';\nimport DefaulTitle from '../title/title.component';\nimport { connect } from 'react-redux';\nimport CardList from './ListOfCards.styles';\n\nconst ListOfCards = ({\n  algorithms\n}) => {\n  let searchField = ''; // async way \n  // componentDidMount = async() => {\n  //     try {\n  //         const getDataB = await fetch('http://localhost:3000/algorithms')\n  //         const dataToJ = await getDataB.json()\n  //         this.setState({algorithmList: dataToJ},console.log(dataToJ))\n  //     }\n  //     catch(err){\n  //         console.log('not possible now');\n  //     }\n  // }\n  // promises\n  // componentDidMount() => {\n  //     const getDataB = await fetch('')\n  //     .then(response => response.json())\n  //     .then(alg => this.setState({algorithmList:alg}))\n  // .catch((e)=>(console.log('not possible now'))\n  // }\n\n  const checkAndFind = e => {\n    searchField = e.target.value;\n  };\n\n  console.log(algorithms.algorithmList);\n  const fiterAlg = algorithms.algorithmList.filter(alg => alg.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(DefaulTitle, {\n          title: 'Algorithms List'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          children: /*#__PURE__*/_jsxDEV(SearchBox, {\n            handleChange: checkAndFind,\n            placeholder: 'Search Algorithms'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: fiterAlg.map(x => /*#__PURE__*/_jsxDEV(CardList, {\n          xs: \"6\",\n          sm: \"6\",\n          md: \"4\",\n          lg: \"3\",\n          children: /*#__PURE__*/_jsxDEV(CardIndividual, {\n            index: x.id,\n            x: x\n          }, x.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListOfCards;\n\nconst mapStateToProps = state => ({\n  algorithms: state.algorithms\n});\n\nexport default connect(mapStateToProps)(ListOfCards);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfCards\");","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/card-list/ListOfCards.component.js"],"names":["React","CardIndividual","Container","Col","Row","SearchBox","DefaulTitle","connect","CardList","ListOfCards","algorithms","searchField","checkAndFind","e","target","value","console","log","algorithmList","fiterAlg","filter","alg","name","toLowerCase","includes","toLocaleLowerCase","map","x","id","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,SAAQC,cAAR,QAA6B,kCAA7B;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,GAAtB,QAAgC,YAAhC;AACA,SAAQC,SAAR,QAAwB,kCAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAElC,MAAIC,WAAW,GAAC,EAAhB,CAFkC,CAIlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAAEF,IAAAA,WAAW,GAAGE,CAAC,CAACC,MAAF,CAASC,KAAvB;AAA8B,GAA5D;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAU,CAACQ,aAAvB;AAEA,QAAMC,QAAQ,GAAGT,UAAU,CAACQ,aAAX,CAAyBE,MAAzB,CAAgCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCb,WAAW,CAACc,iBAAZ,EAAhC,CAAvC,CAAjB;AAEA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAA,6BACI,QAAC,GAAD;AAAA,gCACI,QAAC,WAAD;AAAa,UAAA,KAAK,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,YAAY,EAAEb,YAAzB;AAAuC,YAAA,WAAW,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,SAAD;AAAA,6BACI,QAAC,GAAD;AAAA,kBACKO,QAAQ,CAACO,GAAT,CAAeC,CAAD,iBACf,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAiB,UAAA,EAAE,EAAC,GAApB;AAAwB,UAAA,EAAE,EAAC,GAA3B;AAA+B,UAAA,EAAE,EAAC,GAAlC;AAAA,iCACI,QAAC,cAAD;AACW,YAAA,KAAK,EAAEA,CAAC,CAACC,EADpB;AACwB,YAAA,CAAC,EAAED;AAD3B,aACKA,CAAC,CAACC,EADP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA7DD;;KAAMnB,W;;AA+DN,MAAMoB,eAAe,GAAIC,KAAD,KAAW;AAC/BpB,EAAAA,UAAU,EAAGoB,KAAK,CAACpB;AADY,CAAX,CAAxB;;AAIA,eAAeH,OAAO,CAACsB,eAAD,CAAP,CAAyBpB,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport './ListOfCards.style.css';\nimport {CardIndividual} from '../card/CardIndividual.component';\nimport {Container,Col,Row} from 'reactstrap'\nimport {SearchBox} from '../searchBox/searchBox.component'\nimport DefaulTitle from '../title/title.component';\n\nimport {connect} from 'react-redux'\n\nimport CardList from './ListOfCards.styles'\n\n\nconst ListOfCards = ({algorithms}) => {\n  \n    let searchField=''\n\n    // async way \n\n    // componentDidMount = async() => {\n    //     try {\n    //         const getDataB = await fetch('http://localhost:3000/algorithms')\n    //         const dataToJ = await getDataB.json()\n    //         this.setState({algorithmList: dataToJ},console.log(dataToJ))\n    //     }\n    //     catch(err){\n    //         console.log('not possible now');\n    //     }\n    // }\n\n    // promises\n\n    // componentDidMount() => {\n    //     const getDataB = await fetch('')\n    //     .then(response => response.json())\n    //     .then(alg => this.setState({algorithmList:alg}))\n    // .catch((e)=>(console.log('not possible now'))\n    // }\n\n\n    const checkAndFind = (e) => { searchField = e.target.value }\n    \n\n\n    console.log(algorithms.algorithmList);\n\n    const fiterAlg = algorithms.algorithmList.filter(alg => alg.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n\n    return(\n        <div>\n            <Container>\n                <Row >\n                    <DefaulTitle title={'Algorithms List'} />\n                    <Col xs='12'>\n                        <SearchBox handleChange={checkAndFind} placeholder={'Search Algorithms'}/>\n                    \n                    </Col>\n                </Row>\n            </Container>\n\n            <Container>\n                <Row >\n                    {fiterAlg.map( (x) => \n                    <CardList xs='6' sm='6' md='4' lg='3'>\n                        <CardIndividual\n                        key={x.id} index={x.id} x={x} />\n                    </CardList>\n                    )}      \n                </Row>\n            </Container>\n        </div>\n    )\n    \n\n}\n\nconst mapStateToProps = (state) =>({\n    algorithms : state.algorithms,\n})\n\nexport default connect(mapStateToProps)(ListOfCards)\n\n"]},"metadata":{},"sourceType":"module"}