{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/signInAndOut/sign-up/sign-up.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './sign-up.styles.scss';\nimport FormInput from '../form-input/formInput.component';\nimport CustomButton from '../custom-button/customButton.component';\nimport { auth, createUserProfileDocument } from '../../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../../redux/user/users.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [a, b] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = a;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"password don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    b({ ...a,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"I do not have a acoount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: this.handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: this.handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: this.handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: this.handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"thmpNKwc2CxUqyWa/UGXj1L3pps=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/components/signInAndOut/sign-up/sign-up.component.js"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","connect","signUpStart","SignUp","a","b","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport './sign-up.styles.scss'\n\nimport FormInput from '../form-input/formInput.component'\nimport CustomButton from '../custom-button/customButton.component'\n\nimport { auth, createUserProfileDocument} from '../../../firebase/firebase.utils'\n\nimport { connect } from 'react-redux'\n\nimport {\nsignUpStart\n} from '../../../redux/user/users.actions'\n\n\nconst SignUp = ({signUpStart }) => {\n\n    const [a,b] = useState({\n        displayName: '',\n        email: '',\n        password:'',\n        confirmPassword:''\n    })\n\n    const { displayName, email, password, confirmPassword} = a\n\n\n    const handleSubmit = async event => {\n        event.preventDefault()\n\n        if(password !== confirmPassword) {\n            alert(\"password don't match\");\n            return;\n        } \n\n        signUpStart({ displayName, email , password})\n\n    }\n\n    const handleChange = event =>{\n        const {name,value} = event.target;\n\n        b({\n            ...a,\n            [name]: value\n        })\n    }\n\n\n\n    return(\n        <div className='sign-up'>\n            <h4>I do not have a acoount</h4>\n            <h5>Sign up with your email and password</h5>\n\n            <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                <FormInput \n                type='text'\n                name='displayName'\n                value={displayName}\n                onChange={this.handleChange}\n                label='Display Name'\n                required\n                />\n\n                <FormInput \n                type='email'\n                name='email'\n                value={email}\n                onChange={this.handleChange}\n                label='Email'\n                required\n                />\n\n                <FormInput \n                type='password'\n                name='password'\n                value={password}\n                onChange={this.handleChange}\n                label='Password'\n                required\n                />\n\n                <FormInput \n                type='password'\n                name='confirmPassword'\n                value={confirmPassword}\n                onChange={this.handleChange}\n                label='Confirm Password'\n                required\n                />\n\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n        </div>\n    ) \n}\n\n\nconst mapDispatchToProps =  dispatch => ({\n    signUpStart: userCredentials => dispatch( signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp)\n\n\n"]},"metadata":{},"sourceType":"module"}