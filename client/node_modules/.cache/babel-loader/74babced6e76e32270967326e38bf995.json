{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(roo);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootReducer","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","roo","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAGA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,aAA3B,EAAyC;AACrCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBC,GAAnB;AAEA,OAAO,MAAMC,SAAS,GAAGd,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQG,EAAAA;AAAR,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist'\n\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer'\n\n\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from './root-saga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV==='development'){\n    middlewares.push(logger)\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nsagaMiddleware.run(roo)\n\nexport const persistor = persistStore(store)\n\nexport default {store, persistor };\n\n"]},"metadata":{},"sourceType":"module"}