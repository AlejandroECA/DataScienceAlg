{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAunK2_r4QqEdHyF2zDbOtqnpW1me1CZTw\",\n  authDomain: \"datasc-6fb40.firebaseapp.com\",\n  projectId: \"datasc-6fb40\",\n  storageBucket: \"datasc-6fb40.appspot.com\",\n  messagingSenderId: \"195553255464\",\n  appId: \"1:195553255464:web:fd92e0129acb6dbb90151d\",\n  measurementId: \"G-67P64KQVTV\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exist) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creatin user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport const firestore = firebase.firestore();\nfirestore.collection('users');\nexport default firebase;","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exist","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","collection"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,8BAFD;AAGXC,EAAAA,SAAS,EAAE,cAHA;AAIXC,EAAAA,aAAa,EAAE,0BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAgBC,cAAhB,KAAmC;AACxE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,KAAb,EAAoB;AAChB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwBV,QAA9B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACC,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAQA,OAAOa,KAAP,EAAa;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCF,KAAK,CAACG,OAAvC;AACH;AAEJ;;AAED,SAAOf,OAAP;AAEH,CA1BM;AA4BPZ,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AAEP,MAAMC,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,OAAO,MAAMjB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEPA,SAAS,CAACuB,UAAV,CAAqB,OAArB;AAGA,eAAepC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyAunK2_r4QqEdHyF2zDbOtqnpW1me1CZTw\",\n    authDomain: \"datasc-6fb40.firebaseapp.com\",\n    projectId: \"datasc-6fb40\",\n    storageBucket: \"datasc-6fb40.appspot.com\",\n    messagingSenderId: \"195553255464\",\n    appId: \"1:195553255464:web:fd92e0129acb6dbb90151d\",\n    measurementId: \"G-67P64KQVTV\"\n};\n\n\nexport const createUserProfileDocument = async (userAuth,additionalData) => {\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    const snapShot = await userRef.get()\n\n    if(!snapShot.exist) {\n        const { displayName, email} = userAuth;\n        const createdAt = new Date()\n\n        try{\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        }\n        catch (error){\n            console.log('error creatin user',error.message);\n        }\n\n    }\n\n    return userRef\n\n}\n\nfirebase.initializeApp(config)\n\nexport const auth = firebase.auth();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt:'select_account'})\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport const firestore = firebase.firestore();\n\nfirestore.collection('users')\n\n\nexport default firebase"]},"metadata":{},"sourceType":"module"}