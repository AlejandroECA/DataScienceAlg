{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem);\n  }\n};","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAE,CAACC,SAAD,EAAWC,aAAX,KAA6B;AAErD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB;;AAGA,MAAGH,gBAAH,EAAoB;AAChB,WACIF,SAAS,CAACM,GAAV,CACIF,QAAQ,IACRA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACA,EAAC,GAAGD,QAAJ;AAAaG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAkB;AAAzC,KADA,GAC4CH,QAHhD,CADJ;AAOH;;AACD,SAAO,CAAC,GAAGJ,SAAJ,EAAc,EAAC,GAAGC,aAAJ;AAAkBM,IAAAA,QAAQ,EAAC;AAA3B,GAAd,CAAP;AACH,CAfM;AAiBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAC/D,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADxB,CAAzB;;AAIA,MAAGH,gBAAgB,CAACK,QAAjB,KAA8B,CAAjC,EAAmC;AAC/B,WAAOP,SAAS,CAACU,MAAV,CAAkBN,QAAlB,CAAP;AACH;AAEJ,CATM","sourcesContent":["export const addItemToCart =(cartItems,cartItemToAdd) => {\n\n    const existingCartItem = cartItems.find(\n        cartItem => cartItem.id === cartItemToAdd.id)\n\n    if(existingCartItem){\n        return(\n            cartItems.map(\n                cartItem => \n                cartItem.id === cartItemToAdd.id? \n                {...cartItem,quantity: cartItem.quantity+1}:cartItem\n            )\n        )\n    }\n    return [...cartItems,{...cartItemToAdd,quantity:1}]\n}\n\nexport const removeItemFromCart  =(cartItems, cartItemToRemove) => {\n    const existingCartItem = cartItems.find(\n        cartItem => cartItem.id === cartItemToRemove.id\n    )\n\n    if(existingCartItem.quantity === 1){\n        return cartItems.filter( cartItem)\n    }\n\n}"]},"metadata":{},"sourceType":"module"}