{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAunK2_r4QqEdHyF2zDbOtqnpW1me1CZTw\",\n  authDomain: \"datasc-6fb40.firebaseapp.com\",\n  projectId: \"datasc-6fb40\",\n  storageBucket: \"datasc-6fb40.appspot.com\",\n  messagingSenderId: \"195553255464\",\n  appId: \"1:195553255464:web:fd92e0129acb6dbb90151d\",\n  measurementId: \"G-67P64KQVTV\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exist) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creatin user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    console.log(newDocRef);\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotsToMap = collections => {\n  const transformedCollections = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  transformedCollections.reduce((accumulator, collection) => {\n    accumulator[colle];\n  }, {});\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport const firestore = firebase.firestore();\nfirestore.collection('users');\nexport default firebase;","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exist","displayName","email","createdAt","Date","set","error","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotsToMap","collections","transformedCollections","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","colle","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyAunK2_r4QqEdHyF2zDbOtqnpW1me1CZTw\",\n    authDomain: \"datasc-6fb40.firebaseapp.com\",\n    projectId: \"datasc-6fb40\",\n    storageBucket: \"datasc-6fb40.appspot.com\",\n    messagingSenderId: \"195553255464\",\n    appId: \"1:195553255464:web:fd92e0129acb6dbb90151d\",\n    measurementId: \"G-67P64KQVTV\"\n};\n\n\nexport const createUserProfileDocument = async (userAuth,additionalData) => {\n\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    const snapShot = await userRef.get()\n    console.log(snapShot);\n    if(!snapShot.exist) {\n        const { displayName, email} = userAuth;\n        const createdAt = new Date()\n\n        try{\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        }\n        catch (error){\n            console.log('error creatin user',error.message);\n        }\n\n    }\n\n    return userRef\n\n}\n\nexport const addCollectionAndDocuments = async (collectionKey,objectsToAdd) =>{\n    const collectionRef = firestore.collection(collectionKey);\n\n    const batch = firestore.batch()\n\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc()\n        console.log(newDocRef);\n        batch.set(newDocRef,obj)\n    });\n\n    return await batch.commit()\n\n}\n\nexport const convertCollectionsSnapshotsToMap = (collections) =>{\n    const transformedCollections = collections.docs.map( doc => {\n        const{ title, items} = doc.data();\n        return{\n            routeName: encodeURI(title.toLowerCase()),\n            id:doc.id,\n            title,\n            items\n        }\n    })\n\n    transformedCollections.reduce((accumulator,collection)=>{\n        accumulator[colle]\n    },{})\n}\n\nfirebase.initializeApp(config)\n\nexport const auth = firebase.auth();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt:'select_account'})\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport const firestore = firebase.firestore();\n\nfirestore.collection('users')\n\n\nexport default firebase"]},"metadata":{},"sourceType":"module"}