{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport ShopActionsTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotsToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  yield console.log('bla');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotsToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionsTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/Users/alejandrocarrillo/Documents/Projects/DataScienceDepaul/datascience/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","ShopActionsTypes","firestore","convertCollectionsSnapshotsToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","takeEvery","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,QAAoC,oBAApC;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,SAASC,SAAT,EAAoBC,gCAApB,QAA4D,+BAA5D;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAMA,OAAO,UAAUC,oBAAV,GAAgC;AAEnC,QAAMC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACI,gCAAD,EAAkCQ,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACH,GALD,CAMA,OAAMC,KAAN,EAAa;AACT,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AAGJ;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,SAAS,CAAChB,gBAAgB,CAACiB,uBAAlB,EAA0CZ,oBAA1C,CAAf;AACH","sourcesContent":["import {takeLatest, call, put} from 'redux-saga/effects'\nimport ShopActionsTypes from './shop.types'\nimport { firestore, convertCollectionsSnapshotsToMap } from '../../firebase/firebase.utils'\n\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from './shop.actions'\n\n\nexport function* fetchCollectionAsync(){\n\n    yield console.log('bla');\n\n    try{\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotsToMap,snapshot)\n        yield put(fetchCollectionsSuccess(collectionsMap))\n    }\n    catch(error) {\n        yield put(fetchCollectionsFailure(error.message))\n    }\n\n\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(ShopActionsTypes.FETCH_COLLECTIONS_START,fetchCollectionAsync)\n}\n\n"]},"metadata":{},"sourceType":"module"}